@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization

@model Haver_Niagara.Models.NCR

@{
    ViewData["Title"] = $"{@Model.FormattedID} - Procurement View";
}

<link rel="stylesheet" type="text/css" href="@Url.Content("~/css/ncrForm.css")" />

<div class="d-flex justify-content-end">
    <a id="cancel-button" asp-controller="Home" asp-action="List" class="btn btn-close"></a>
</div>

<!--Header-->
<div>
    <div class="pt-2 pb-0 ps-1 fs-5 d-flex justify-content-between form-labels">
        <dl class="d-flex justify-content-between">
            <dt>
                @Html.DisplayNameFor(model => model.FormattedID)
            </dt>
            <dd class="ms-2">
                @Html.DisplayFor(model => model.FormattedID)
                @{
                    var test = Model;
                }
            </dd>
        </dl>
        <dl class="d-flex justify-content-between">
            <dt>
                Date Created:
                @* @Html.DisplayNameFor(model => model.NCR_Date) *@
            </dt>
            <dd class="ms-2">
                @Html.DisplayFor(model => model.NCR_Date)
            </dd>
        </dl>
    </div>
    <div class="d-flex justify-content-between text-muted mb-3 small-stage-labels">
        <!--Previous Section = OperationsDetails-->
        <a asp-action="OperationsDetails" asp-route-id="@Model?.ID" class="btn-forward">
            <ion-icon name="arrow-back-circle-outline" class="btn-forward-icon"></ion-icon>
        </a>
        <!--display enum stage quality rep-->
        <div>
            @foreach (var ncrStage in Enum.GetValues(typeof(NCRStage)))
            {
                <div class="form-check form-check-inline">
                    <input type="radio" asp-for="NCR_Stage" disabled class="form-check-input" value="@ncrStage" id="@($"ncrStage{ncrStage}")" />
                    <label for="@($"ncrStage{ncrStage}")">@((typeof(NCRStage).GetMember(ncrStage.ToString())[0].GetCustomAttributes(typeof(DisplayAttribute), false)[0] as DisplayAttribute).Name)</label>
                </div>
            }
        </div>
        @if (User.IsInRole("Procurement"))
        {
            <!--back to ncr log-->
            <a href="@Url.Action("List", "Home", new { id = @Model.ID })" class="btn-forward" title="Cancel" id="cancel-button">
                <ion-icon name="close-circle-outline" class="btn-forward-icon"></ion-icon>
            </a>
        }
        else
        {
            <!--Next Section = QualityRepDetailsFinal-->
            <a asp-action="QualityRepDetailsFinal" asp-route-id="@Model?.ID" class="btn-forward">
                <ion-icon name="arrow-forward-circle-outline" class="btn-forward-icon"></ion-icon>
            </a>
        }
        @*     <button onclick="window.history.back();" class="btn-forward">
        <ion-icon name="arrow-forward-circle-outline" class="btn-forward-icon"></ion-icon>
        </button> *@
    </div>
</div>

<!--Details view-->
<form>
    <div>
        @* Procurement Section *@
        <div class="row border m-1 p-2 ps-3 fs-6 section-header bg-secondary">4. Procurement (buyer)</div>

        @* row 13 *@
        <div class="row m-1 border">
            <div class="col-sm-6 pt-3 border">
                <div class="d-flex justify-content-center">
                    <dl>
                        <dt>
                            Return rejected items to supplier <span class="fw-light">(If "Yes" enter Carrier information)</span>
                        </dt>
                        <dd class="mt-2">
                            <div class="d-flex">
                                @Html.RadioButtonFor(model => model.Procurement.ReturnRejected, true, new { @checked = Model.Procurement != null && Model.Procurement.ReturnRejected, @disabled = "disabled", @class = "me-2" })
                                <label class="me-4">Yes</label>

                                @Html.RadioButtonFor(model => model.Procurement.ReturnRejected, false, new { @checked = Model.Procurement != null && !Model.Procurement.ReturnRejected, @disabled = "disabled", @class = "me-2" })
                                <label>No</label>
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="col-sm-6 pt-3 border">
                <div class="d-flex justify-content-center">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Procurement.ToReceiveDate)
                        </dt>
                        <dd class="mt-2 mb-0">
                            <div class="row ms-1 mb-2">
                                Date: <span class="text-muted"> @Html.DisplayFor(model => model.Procurement.ToReceiveDate)</span>
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        @* row 14 *@
        <div class="row m-1 border">
            <div class="col-sm-6 d-flex">
                <div class="col-sm-6 mt-2 ms-3 mb-0 ">
                    <p>
                        RMA Number: <span class="text-muted">@Html.DisplayFor(model => model.Procurement.RMANumber)</span>
                    </p>
                    <p>
                        Carrier: <span class=text-muted>@Html.DisplayFor(model => model.Procurement.CarrierName)</span>
                    </p>
                    <p>

                        Phone: <span class=text-muted>@Html.DisplayFor(model => model.Procurement.CarrierPhone)</span>
                    </p>
                    <p>
                        Account Number: <span class=text-muted>@Html.DisplayFor(model => model.Procurement.AccountNumber)</span>
                    </p>
                </div>
                <div class="col-sm-6 mt-2 ms-1 mb-0 ">
                    <dl>
                        <dt>
                            Dispose on site
                        </dt>
                        <dd class="mt-2">
                            <div class="d-flex">
                                @Html.RadioButtonFor(model => model.Procurement.DisposeOnSite, true, new { @checked = Model.Procurement != null && Model.Procurement.DisposeOnSite == true, @disabled = "disabled", @class = "me-2" })
                                <label class="me-4">Yes</label>

                                @Html.RadioButtonFor(model => model.Procurement.DisposeOnSite, false, new { @checked = Model.Procurement != null && !Model.Procurement.DisposeOnSite == false, @disabled = "disabled", @class = "me-2" })
                                <label>No</label>
                            </div>
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="col-sm-6 pt-3 border">
                <div class="d-flex ms-1 mb-2">
                    <span class="ms-3">
                        @Html.CheckBoxFor(model => model.Procurement.SuppReturnCompletedSAP, new { @disabled = "disabled" })
                    </span>
                    <span class="ms-3">@Html.DisplayNameFor(model => model.Procurement.SuppReturnCompletedSAP)</span>
                </div>
                <div class="d-flex ms-1 mb-2">
                    <span class="ms-3">
                        @Html.CheckBoxFor(model => model.Procurement.ExpectSuppCredit, new { @disabled = "disabled" })
                    </span>
                    <spa class="ms-3">@Html.DisplayNameFor(model => model.Procurement.ExpectSuppCredit)</spa>

                </div>
                <div class="d-flex ms-1 mb-2">
                    <span class="ms-3">
                        @Html.CheckBoxFor(model => model.Procurement.BillSupplier, new { @disabled = "disabled" })
                    </span>
                    <span class="ms-3">@Html.DisplayNameFor(model => model.Procurement.BillSupplier)</span>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-end mt-3">
        @if (User.IsInRole("Procurement"))
        {
            <div class="mt-2">
                <a asp-action="ProcurementEdit" asp-route-id="@Model?.ID" class="btn btn-outline-primary me-3">Edit Section</a>
            </div>
        }
        <div class="mt-2">
            <a id="cancel-button" asp-controller="Home" asp-action="List" class="btn btn-outline-danger">Cancel</a>
        </div>
    </div>
</form>
