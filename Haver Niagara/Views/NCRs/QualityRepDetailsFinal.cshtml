@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization

@model Haver_Niagara.Models.NCR

@{
    ViewData["Title"] = $"{@Model.FormattedID} - Quality View";
}

<link rel="stylesheet" type="text/css" href="@Url.Content("~/css/ncrForm.css")" />

<!--Header-->
<div>
    <div class="pt-2 pb-0 ps-1 fs-5 d-flex justify-content-between form-labels">
        <dl class="d-flex justify-content-between">
            <dt>
                @Html.DisplayNameFor(model => model.FormattedID)
            </dt>
            <dd class="ms-2">
                @Html.DisplayFor(model => model.FormattedID)
                @{
                    var test = Model;
                }
            </dd>
        </dl>
        <dl class="d-flex justify-content-between">
            <dt>
                Date Created:
                @* @Html.DisplayNameFor(model => model.NCR_Date) *@
            </dt>
            <dd class="ms-2">
                @Html.DisplayFor(model => model.NCR_Date)
            </dd>
        </dl>
    </div>
    <div class="d-flex justify-content-between text-muted mb-3 small-stage-labels">
        <!--Previous Section = ProcurementDetails-->
        <a asp-action="ProcurementDetails" asp-route-id="@Model?.ID" class="btn-forward">
            <ion-icon name="arrow-back-circle-outline" class="btn-forward-icon"></ion-icon>
        </a>
        <!--display enum stage quality rep-->
        <div>
            @foreach (var ncrStage in Enum.GetValues(typeof(NCRStage)))
            {
                <div class="form-check form-check-inline">
                    <input type="radio" asp-for="NCR_Stage" disabled class="form-check-input" value="@ncrStage" id="@($"ncrStage{ncrStage}")" />
                    <label for="@($"ncrStage{ncrStage}")">@((typeof(NCRStage).GetMember(ncrStage.ToString())[0].GetCustomAttributes(typeof(DisplayAttribute), false)[0] as DisplayAttribute).Name)</label>
                </div>
            }
        </div>
        <!--back to ncr log-->
        <a href="@Url.Action("List", "Home", new { id = @Model.ID })" class="btn-forward" title="Cancel" id="cancel-button">
            <ion-icon name="close-circle-outline" class="btn-forward-icon"></ion-icon>
        </a>
  @*       <button onclick="window.history.back();" class="btn-forward">
            <ion-icon name="arrow-forward-circle-outline" class="btn-forward-icon"></ion-icon>
        </button> *@
    </div>
</div>

<!--details view-->
<form>
    <div>
        @* Quality Inspector Section *@
        <div class="row m-1 p-2 ps-3 fs-6 section-header bg-secondary">5. Quality Representative</div>
        @* row 15 *@
        <div class="row m-1 border">
            <div class="col-sm-3 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        Re-Inspected Acceptable?
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex justify-content-center">
                            <span class="ms-2 me-5">
                                @* <label asp-for="QualityInspection.ReInspected" class="control-label"></label><br /> *@
                                <div class="d-flex">
                                    @Html.RadioButtonFor(model => model.QualityInspectionFinal.ReInspected, true, new { @checked = Model.QualityInspectionFinal != null && Model.QualityInspectionFinal.ReInspected, @disabled = "disabled", @class = "me-2" })
                                    <label class="me-4">Yes</label>

                                    @Html.RadioButtonFor(model => model.QualityInspectionFinal.ReInspected, false, new { @checked = Model.QualityInspectionFinal != null && !Model.QualityInspectionFinal.ReInspected, @disabled = "disabled", @class = "me-2" })
                                    <label>No</label>
                                    <span asp-validation-for="QualityInspectionFinal.ReInspected" class="text-danger"></span>
                                </div>
                            </span>
                        </div>
                    </dd>
                </dl>
            </div>
            <div class="col-sm-3 pt-2">
                <small class="fw-light">
                    @* New NCR Number *@
                </small>
                <div class="row">
                    <dl>
                        <dt class="mt-2 col-sm fw-normal">
                            <div>
                                @{
                                    // If the Old or New NCRID's are not null then..
                                    if (Model.OldNCRID != null || ViewBag.NewNCRID != null)
                                    {
                                        // Declare formatID to use for comparison
                                        var newNCR = ViewBag?.NewNCRID;
                                        var oldNCR = Model?.OldNCRID;

                                        // Format NCR IDs with the current year
                                        string newNCR_ID = newNCR != null ? $"{DateTime.UtcNow.Year}-{newNCR.ToString().PadLeft(3, '0')}" : null;
                                        string oldNCR_ID = oldNCR != null ? $"{DateTime.UtcNow.Year}-{oldNCR.ToString().PadLeft(3, '0')}" : null;

                                        // If the formatted ID is NOT the same as the old one OR if the formatted id is NOT equal to the ViewBag format ID, proceed
                                        if (Model.FormattedID != oldNCR_ID || Model.FormattedID != newNCR_ID)
                                        {
                                            // If the old NCR id is not null, then it must be Previous, else it must be New
                                            string ncrLabel = oldNCR != null ? "Previous NCR Number" : "New NCR Number";
                                            @ncrLabel
                                        }
                                    }

                                }
                            </div>
                            @{
                                if (Model.OldNCRID != null || ViewBag.NewNCRID != null)
                                {
                                    // Declare formatID to use for comparison
                                    var newNCR = ViewBag?.NewNCRID;
                                    var oldNCR = Model?.OldNCRID;

                                    // Format NCR IDs with the current year
                                    string newNCR_ID = newNCR != null ? $"{DateTime.UtcNow.Year}-{newNCR.ToString().PadLeft(3, '0')}" : null;
                                    string oldNCR_ID = oldNCR != null ? $"{DateTime.UtcNow.Year}-{oldNCR.ToString().PadLeft(3, '0')}" : null;

                                    if (oldNCR_ID != Model.FormattedID || newNCR_ID != Model.FormattedID)
                                    {
                                        // If old NCR ID is null then use new NCR ID
                                        string useID = oldNCR_ID != null ? oldNCR_ID : newNCR_ID;
                                        @useID
                                    }
                                }
                            }
                        </dt>
                    </dl>
                </div>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Inspector's Name
                            @* @Html.DisplayNameFor(model => model.InspectName) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.QualityInspectionFinal.InspectorName)
                        </dd>
                    </dl>

                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.QualityInspectionFinal.InspectorDate)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        @* row 16 *@
        <div class="row m-1 border">
            <div class="col-sm-6 pt-3 ps-3 d-flex justify-content-start">
                <dl>
                    <dt>
                        NCR Still Active?
                    </dt>
                    <dd class="mt-2">
                        <div class="d-flex justify-content-center">
                            <div class="d-flex">
                                @Html.RadioButtonFor(model => model.NCR_Status, true, new { @checked = Model != null && Model.NCR_Status, @disabled = "disabled", @class = "me-2" })
                                <label class="me-4">Yes</label>

                                @Html.RadioButtonFor(model => model.NCR_Status, false, new { @checked = Model != null && !Model.NCR_Status, @disabled = "disabled", @class = "me-2" })
                                <label>No</label>
                                <span asp-validation-for="NCR_Status" class="text-danger"></span>
                            </div>
                        </div>
                    </dd>
                </dl>
            </div>
            <div class="col-sm-6 border pt-3 ps-3">
                <div class="row">
                    <dl class="d-flex m-0">
                        <dt class="col-sm">
                            Quality Department
                        </dt>
                        <dd class="col-sm ms-2">

                            @Html.DisplayFor(model => model.QualityInspectionFinal.Department)
                    </dl>
                </div>
                <div class="row">
                    <dl class="d-flex">
                        <dt class="col-sm">
                            Date
                            @* @Html.DisplayNameFor(model => model.InspectDate) *@
                        </dt>
                        <dd class="col-sm ms-2">
                            @Html.DisplayFor(model => model.QualityInspectionFinal.DepartmentDate)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-end mt-3">
        @if (User.IsInRole("Quality Representative"))
        {
            <div class="mt-2">
                <a asp-action="QualityRepresentativeEdit" asp-route-id="@Model?.ID" class="btn btn-outline-primary me-3">Edit Section</a>
            </div>
        }
        <div class="mt-2">
            <a id="cancel-button" asp-controller="Home" asp-action="List" class="btn btn-outline-danger">Cancel</a>
        </div>
    </div>
</form>